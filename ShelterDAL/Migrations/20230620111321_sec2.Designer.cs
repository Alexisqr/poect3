// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShelterDAL.Models;

#nullable disable

namespace ShelterDAL.Migrations
{
    [DbContext(typeof(AnShelterIdenContext))]
    [Migration("20230620111321_sec2")]
    partial class sec2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShelterDAL.Models.Animal", b =>
                {
                    b.Property<int>("Idanimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDAnimal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idanimal"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idanimal")
                        .HasName("PK__Animals__5D8F073D76DB50EF");

                    b.HasIndex("Kind");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("ShelterDAL.Models.ComentGlob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Idvolonter")
                        .HasColumnType("int")
                        .HasColumnName("IDVolonter");

                    b.Property<string>("Text")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id")
                        .HasName("PK__ComentGl__3214EC270345D92A");

                    b.HasIndex("Idvolonter");

                    b.ToTable("ComentGlob", (string)null);
                });

            modelBuilder.Entity("ShelterDAL.Models.ComentGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Idgood")
                        .HasColumnType("int")
                        .HasColumnName("IDGood");

                    b.Property<int>("Idvolonter")
                        .HasColumnType("int")
                        .HasColumnName("IDVolonter");

                    b.Property<string>("Text")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id")
                        .HasName("PK__ComentGo__3214EC273E438E7E");

                    b.HasIndex("Idgood");

                    b.HasIndex("Idvolonter");

                    b.ToTable("ComentGood", (string)null);
                });

            modelBuilder.Entity("ShelterDAL.Models.ComentKindAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("IdkindAnimals")
                        .HasColumnType("int")
                        .HasColumnName("IDKindAnimals");

                    b.Property<int>("Idvolonter")
                        .HasColumnType("int")
                        .HasColumnName("IDVolonter");

                    b.Property<string>("Text")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id")
                        .HasName("PK__ComentKi__3214EC27C48BBC0C");

                    b.HasIndex("IdkindAnimals");

                    b.HasIndex("Idvolonter");

                    b.ToTable("ComentKindAnimals");
                });

            modelBuilder.Entity("ShelterDAL.Models.Good", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NameKind")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Goods__3214EC27E5FDF0B2");

                    b.HasIndex("NameKind");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("ShelterDAL.Models.KindOfAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameKind")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__KindOfAn__3214EC275922B149");

                    b.ToTable("KindOfAnimals");
                });

            modelBuilder.Entity("ShelterDAL.Models.KindOfGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameKind")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__KindOfGo__3214EC27BA14D8B1");

                    b.ToTable("KindOfGoods");
                });

            modelBuilder.Entity("ShelterDAL.Models.Volonter", b =>
                {
                    b.Property<int>("Idvolonters")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDVolonters");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idvolonters"));

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("E-Mail");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNamber")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idvolonters")
                        .HasName("PK__Volonter__D3BC0C3D529BEE2B");

                    b.ToTable("Volonters");
                });

            modelBuilder.Entity("ShelterDAL.Models.VolontersAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Idanimals")
                        .HasColumnType("int")
                        .HasColumnName("IDAnimals");

                    b.Property<int>("Idvolonter")
                        .HasColumnType("int")
                        .HasColumnName("IDVolonter");

                    b.HasKey("Id")
                        .HasName("PK__Volonter__3214EC274D2062F6");

                    b.HasIndex("Idvolonter");

                    b.HasIndex(new[] { "Idanimals" }, "UQ__Volonter__1CF18EFE0ECBD9ED")
                        .IsUnique();

                    b.ToTable("Volonters_Animals", (string)null);
                });

            modelBuilder.Entity("ShelterDAL.Models.VolontersGood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Idgood")
                        .HasColumnType("int")
                        .HasColumnName("IDGood");

                    b.Property<int>("Idvolonter")
                        .HasColumnType("int")
                        .HasColumnName("IDVolonter");

                    b.HasKey("Id")
                        .HasName("PK__Volonter__3214EC27F53949D1");

                    b.HasIndex("Idgood");

                    b.HasIndex("Idvolonter");

                    b.ToTable("Volonters_Goods", (string)null);
                });

            modelBuilder.Entity("ShelterDAL.Models.Animal", b =>
                {
                    b.HasOne("ShelterDAL.Models.KindOfAnimal", "KindNavigation")
                        .WithMany("Animals")
                        .HasForeignKey("Kind")
                        .IsRequired()
                        .HasConstraintName("FK__Animals__Kind__2A4B4B5E");

                    b.Navigation("KindNavigation");
                });

            modelBuilder.Entity("ShelterDAL.Models.ComentGlob", b =>
                {
                    b.HasOne("ShelterDAL.Models.Volonter", "IdvolonterNavigation")
                        .WithMany("ComentGlobs")
                        .HasForeignKey("Idvolonter")
                        .IsRequired()
                        .HasConstraintName("FK__ComentGlo__IDVol__403A8C7D");

                    b.Navigation("IdvolonterNavigation");
                });

            modelBuilder.Entity("ShelterDAL.Models.ComentGood", b =>
                {
                    b.HasOne("ShelterDAL.Models.Good", "IdgoodNavigation")
                        .WithMany("ComentGoods")
                        .HasForeignKey("Idgood")
                        .IsRequired()
                        .HasConstraintName("FK__ComentGoo__IDGoo__398D8EEE");

                    b.HasOne("ShelterDAL.Models.Volonter", "IdvolonterNavigation")
                        .WithMany("ComentGoods")
                        .HasForeignKey("Idvolonter")
                        .IsRequired()
                        .HasConstraintName("FK__ComentGoo__IDVol__38996AB5");

                    b.Navigation("IdgoodNavigation");

                    b.Navigation("IdvolonterNavigation");
                });

            modelBuilder.Entity("ShelterDAL.Models.ComentKindAnimal", b =>
                {
                    b.HasOne("ShelterDAL.Models.KindOfAnimal", "IdkindAnimalsNavigation")
                        .WithMany("ComentKindAnimals")
                        .HasForeignKey("IdkindAnimals")
                        .IsRequired()
                        .HasConstraintName("FK__ComentKin__IDKin__3D5E1FD2");

                    b.HasOne("ShelterDAL.Models.Volonter", "IdvolonterNavigation")
                        .WithMany("ComentKindAnimals")
                        .HasForeignKey("Idvolonter")
                        .IsRequired()
                        .HasConstraintName("FK__ComentKin__IDVol__3C69FB99");

                    b.Navigation("IdkindAnimalsNavigation");

                    b.Navigation("IdvolonterNavigation");
                });

            modelBuilder.Entity("ShelterDAL.Models.Good", b =>
                {
                    b.HasOne("ShelterDAL.Models.KindOfGood", "NameKindNavigation")
                        .WithMany("Goods")
                        .HasForeignKey("NameKind")
                        .IsRequired()
                        .HasConstraintName("FK__Goods__NameKind__2D27B809");

                    b.Navigation("NameKindNavigation");
                });

            modelBuilder.Entity("ShelterDAL.Models.VolontersAnimal", b =>
                {
                    b.HasOne("ShelterDAL.Models.Animal", "IdanimalsNavigation")
                        .WithOne("VolontersAnimal")
                        .HasForeignKey("ShelterDAL.Models.VolontersAnimal", "Idanimals")
                        .IsRequired()
                        .HasConstraintName("FK__Volonters__IDAni__31EC6D26");

                    b.HasOne("ShelterDAL.Models.Volonter", "IdvolonterNavigation")
                        .WithMany("VolontersAnimals")
                        .HasForeignKey("Idvolonter")
                        .IsRequired()
                        .HasConstraintName("FK__Volonters__IDVol__30F848ED");

                    b.Navigation("IdanimalsNavigation");

                    b.Navigation("IdvolonterNavigation");
                });

            modelBuilder.Entity("ShelterDAL.Models.VolontersGood", b =>
                {
                    b.HasOne("ShelterDAL.Models.Good", "IdgoodNavigation")
                        .WithMany("VolontersGoods")
                        .HasForeignKey("Idgood")
                        .IsRequired()
                        .HasConstraintName("FK__Volonters__IDGoo__35BCFE0A");

                    b.HasOne("ShelterDAL.Models.Volonter", "IdvolonterNavigation")
                        .WithMany("VolontersGoods")
                        .HasForeignKey("Idvolonter")
                        .IsRequired()
                        .HasConstraintName("FK__Volonters__IDVol__34C8D9D1");

                    b.Navigation("IdgoodNavigation");

                    b.Navigation("IdvolonterNavigation");
                });

            modelBuilder.Entity("ShelterDAL.Models.Animal", b =>
                {
                    b.Navigation("VolontersAnimal");
                });

            modelBuilder.Entity("ShelterDAL.Models.Good", b =>
                {
                    b.Navigation("ComentGoods");

                    b.Navigation("VolontersGoods");
                });

            modelBuilder.Entity("ShelterDAL.Models.KindOfAnimal", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("ComentKindAnimals");
                });

            modelBuilder.Entity("ShelterDAL.Models.KindOfGood", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("ShelterDAL.Models.Volonter", b =>
                {
                    b.Navigation("ComentGlobs");

                    b.Navigation("ComentGoods");

                    b.Navigation("ComentKindAnimals");

                    b.Navigation("VolontersAnimals");

                    b.Navigation("VolontersGoods");
                });
#pragma warning restore 612, 618
        }
    }
}
